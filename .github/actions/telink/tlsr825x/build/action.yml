name: 'Build a Telink tlsr825x project'
description: 'Install the Telink IDE, Zigbee SDK and the build a tlsr825x project'
inputs:
  ide:
    description: Location of the Telink IDE
    default: c:\telink\ide
  zigbee_sdk:
    description: Location of the Telink Zigbee SDK
    default: c:\telink\zigbee_sdk
  project:
    description: tlsr825x project to build
    default: sampleGW_8258
  board:
    description: tlsr825x board to target
    default:

env:
  WORKSPACES: "tl_zigbee_sdk\build"
  PROJECT_ROOT: "tlsr_tc32"
  EXTENSIONS: "bin,elf,lst"

runs:
  using: "composite"
  steps:
    - name: Find eclipsec
      shell: pwsh
      run: |
        $eclipsec=Get-ChildItem -Path "${{ inputs.ide }}\eclipsec.exe" -Recurse | Select FullName
        if ($eclipsec.count > 1)
          Write-Error "Multiple instances of 'eclipsec' were found." -ErrorAction:Continue
          Get-ChildItem -Path "${{ inputs.ide }}\eclipsec.exe" -Recurse | Select FullName
          exit 1
        }
        # Passing result to the next step.
        echo "eclipsec=$eclipsec" >> $env:GITHUB_ENV

    - name: Build TLSR8258 ZigBee image
      shell: pwsh
      run: |
        $proc=Start-Process `
          -FilePath $env:eclipsec `
          -ArgumentList `
            "-vm `
            ""${{ inputs.ide }}\jre\bin\client"" `
            -noSplash `
            -application org.eclipse.cdt.managedbuilder.core.headlessbuild `
            -data ""${{ inputs.zigbee_sdk }}\$env:WORKSPACES"" `
            -build ""$env:PROJECT_ROOT/${{ inputs.project }}""" `
          -NoNewWindow `
          -RedirectStandardOutput $env:TEMP\stdout.txt `
          -RedirectStandardError $env:TEMP\stderr.txt `
          -Wait `
          -PassThru

        # Check exit code.
        if ($proc.ExitCode -ne 0)
        {
          Write-Error "eclipsec exited with $proc.ExitCode." -ErrorAction:Continue
          exit 1
        }

    - name: Check for errors and expected files
      shell: pwsh
      run:
        # Display output, especially any errors!
        Write-Information "STDOUT from the installer..." -InformationAction:Continue
        Get-Content -Path $env:TEMP\stdout.txt
        Write-Information "STDERR from the installer..." -InformationAction:Continue
        Get-Content -Path $env:TEMP\stderr.txt

        # Capture first line of errors to test later.
        $stderr = $(Get-Content  -Path $env:TEMP\stderr.txt -First 1)
        Remove-Item -Path $env:TEMP\stdout.txt
        Remove-Item -Path $env:TEMP\stderr.txt

        # Builds worked it all of the following are true:
        # - ExitCode is zero (0) (checked above)
        # - stderr log output is empty
        # - an 'elf' image has been created
        $image_root = ${{ inputs.zigbee_sdk }}\$env:WORKSPACES\$env:PROJECT_ROOT\${{ inputs.project }}
        if ($stderr -ne "")
        {
          Write-Error "eclipsec reported errors." -ErrorAction:Continue
          exit 1
        }

        # See if we have all the expected files.
        $extensions = $env:EXTENSIONS.split(",")
        $missing = $False
        foreach $ext in $extensions
        {
          if (! $(Test-Path -Path $image_root\${{ inputs.project }}.$ext))
          {
            Write-Error "Expected output file '$image_root\${{ inputs.project }}.$ext' not found." -ErrorAction:Continue
            $missing = $True
          }
        }

        if ($missing)
        {
            Write-Error "Build has failed." -ErrorAction:Continue
            exit 1
        }

        # Get here and we have succeeded.
        Write-Information "eclipsec build succeeded." -InformationAction:Continue

    - uses: actions/upload-artifact@v3
      with:
        name: tlsr825x-firmware
        # Note that this is REGEX and not a Powershell statement so the '$'s have to escaped to avoid them being
        # identified as "end of string".
        path: "${{ inputs.zigbee_sdk }}\\$env:WORKSPACES\\$env:PROJECT_ROOT\\${{ inputs.project }}\\${{ inputs.project }}.*"
        retention-days: 1
